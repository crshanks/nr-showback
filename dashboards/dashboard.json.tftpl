{
  "name": "${tf_dashboard_name}",
  "description": "Updated with minimum commitment pricing",
  "permissions": "PUBLIC_READ_WRITE",
  "pages": [
    %{~ for index, tier in tf_unique_tiers ~}
    %{~ if tier != null ~}
    {
      "name": "${tier}",
      "description": null,
      "widgets": [
        {
          "title": "Consumption Cost (this month)",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 4,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "FROM Metric, NrConsumption SELECT %{~ if tf_min_core_users == 0 && tf_min_full_users == 0 && tf_min_gb_ingest == 0 ~}(max(`${tf_metric_name_prefix}.department.coreuser.count`) * ${tf_core_user_usd}) + (max(`${tf_metric_name_prefix}.department.fulluser.count`) * ${tf_full_user_usd}) + (sum(GigabytesIngested) * ${tf_gb_ingest_usd})%{~ else ~}if(max(`${tf_metric_name_prefix}.department.coreuser.count`) > ${tf_min_core_users}, ${tf_min_core_users} * ${tf_core_user_committed_usd} + (max(`${tf_metric_name_prefix}.department.coreuser.count`) - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, ${tf_min_core_users} * ${tf_core_user_committed_usd}) + if(max(`${tf_metric_name_prefix}.department.fulluser.count`) > ${tf_min_full_users}, ${tf_min_full_users} * ${tf_full_user_committed_usd} + (max(`${tf_metric_name_prefix}.department.fulluser.count`) - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, ${tf_min_full_users} * ${tf_full_user_committed_usd}) + if(sum(GigabytesIngested) > ${tf_min_gb_ingest}, ${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + (sum(GigabytesIngested) - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, ${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd})%{~ endif ~} AS 'Total Cost (USD)' SINCE this month FACET CASES(%{ for index_department, department in tf_showback_config ~}%{ if department.tier == tier ~}WHERE (department = '${department.department_name}' AND (tier = '${tier}')) OR consumingAccountName IN (%{ for index_accounts_in, account in department.accounts_in }%{ if index_accounts_in != 0 ~}, %{ endif }'${account}'%{ endfor ~})%{ for regex in department.accounts_regex } OR consumingAccountName RLIKE r'${regex}'%{ endfor } AS '${department.department_name}', %{ endif }%{ endfor ~}WHERE (department = 'Unassigned' AND (tier = '${tier}')) OR consumingAccountName IS NOT NULL AS 'Unassigned') AS 'department'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Consumption Cost (this month)",
          "layout": {
            "column": 5,
            "row": 1,
            "width": 8,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "FROM Metric, NrConsumption SELECT %{~ if tf_min_core_users == 0 && tf_min_full_users == 0 && tf_min_gb_ingest == 0 ~}max(`${tf_metric_name_prefix}.department.coreuser.count`) * ${tf_core_user_usd} + max(`${tf_metric_name_prefix}.department.fulluser.count`) * ${tf_full_user_usd} + sum(GigabytesIngested) * ${tf_gb_ingest_usd}%{~ else ~}if(max(`${tf_metric_name_prefix}.department.coreuser.count`) > ${tf_min_core_users}, ${tf_min_core_users} * ${tf_core_user_committed_usd} + (max(`${tf_metric_name_prefix}.department.coreuser.count`) - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, ${tf_min_core_users} * ${tf_core_user_committed_usd}) + if(max(`${tf_metric_name_prefix}.department.fulluser.count`) > ${tf_min_full_users}, ${tf_min_full_users} * ${tf_full_user_committed_usd} + (max(`${tf_metric_name_prefix}.department.fulluser.count`) - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, ${tf_min_full_users} * ${tf_full_user_committed_usd}) + if(sum(GigabytesIngested) > ${tf_min_gb_ingest}, ${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + (sum(GigabytesIngested) - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, ${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd})%{~ endif ~} AS 'Total Cost (USD)', max(`${tf_metric_name_prefix}.department.fulluser.count`) AS 'Full User Count', %{~ if tf_min_full_users == 0 ~}max(`${tf_metric_name_prefix}.department.fulluser.count`) * ${tf_full_user_usd}%{~ else ~}if(max(`${tf_metric_name_prefix}.department.fulluser.count`) > ${tf_min_full_users}, ${tf_min_full_users} * ${tf_full_user_committed_usd} + (max(`${tf_metric_name_prefix}.department.fulluser.count`) - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, ${tf_min_full_users} * ${tf_full_user_committed_usd})%{~ endif ~} AS 'Full User Cost (USD)', max(`${tf_metric_name_prefix}.department.coreuser.count`) AS 'Core User Count', %{~ if tf_min_core_users == 0 ~}max(`${tf_metric_name_prefix}.department.coreuser.count`) * ${tf_core_user_usd}%{~ else ~}if(max(`${tf_metric_name_prefix}.department.coreuser.count`) > ${tf_min_core_users}, ${tf_min_core_users} * ${tf_core_user_committed_usd} + (max(`${tf_metric_name_prefix}.department.coreuser.count`) - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, ${tf_min_core_users} * ${tf_core_user_committed_usd})%{~ endif ~} AS 'Core User Cost (USD)', sum(GigabytesIngested) AS ingestGigabytes, %{~ if tf_min_gb_ingest == 0 ~}sum(GigabytesIngested) * ${tf_gb_ingest_usd}%{~ else ~}if(sum(GigabytesIngested) > ${tf_min_gb_ingest}, ${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + (sum(GigabytesIngested) - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, ${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd})%{~ endif ~} AS 'Ingest Cost (USD)' SINCE this month FACET CASES(%{ for index_department, department in tf_showback_config ~}%{ if department.tier == tier ~}WHERE (department = '${department.department_name}' AND (tier = '${tier}')) OR consumingAccountName IN (%{ for index_accounts_in, account in department.accounts_in }%{ if index_accounts_in != 0 ~}, %{ endif }'${account}'%{ endfor ~})%{ for regex in department.accounts_regex } OR consumingAccountName RLIKE r'${regex}'%{ endfor } AS '${department.department_name}', %{ endif }%{ endfor ~}WHERE (department = 'Unassigned' AND (tier = '${tier}')) OR consumingAccountName IS NOT NULL AS 'Unassigned') AS 'department'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Full Users",
          "layout": {
            "column": 1,
            "row": 5,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": true
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId":  ${tf_account_id},
                "query": "SELECT latest(`${tf_metric_name_prefix}.department.fulluser.count`) AS 'Full User Count' FROM Metric SINCE 1 DAY AGO facet department WHERE tier = '${tier}' LIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Core Users",
          "layout": {
            "column": 4,
            "row": 5,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": true
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId":  ${tf_account_id},
                "query": "SELECT latest(`${tf_metric_name_prefix}.department.coreuser.count`) AS 'Core User Count' FROM Metric SINCE 1 DAY AGO facet department WHERE tier = '${tier}' LIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Data Ingested GB",
          "layout": {
            "column": 7,
            "row": 5,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "SELECT sum(GigabytesIngested) AS 'Ingested GB' FROM NrConsumption WHERE tier = '${tier}' SINCE 3 months ago facet monthOf(timestamp) LIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Cost this Year",
          "layout": {
            "column": 1,
            "row": 8,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "yAxisLeft": {
              "max": null,
              "min": null,
              "zero": false
            },
            "dataFormatters": [
              {
                "name": "Total Cost (USD)",
                "precision": 2,
                "type": "decimal"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "FROM NrMTDConsumption\nSELECT\n  %{~ if tf_min_core_users == 0 && tf_min_full_users == 0 && tf_min_gb_ingest == 0 ~}filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') * ${tf_full_user_usd} + filter(latest(billableConsumption), WHERE metric = 'CoreUsers') * ${tf_core_user_usd} + filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') * ${tf_gb_ingest_usd}%{~ else ~}(${tf_min_full_users} * ${tf_full_user_committed_usd} + if(filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') > ${tf_min_full_users}, (filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, 0)) + (${tf_min_core_users} * ${tf_core_user_committed_usd} + if(filter(latest(billableConsumption), WHERE metric = 'CoreUsers') > ${tf_min_core_users}, (filter(latest(billableConsumption), WHERE metric = 'CoreUsers') - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, 0)) + (${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + if(filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') > ${tf_min_gb_ingest}, (filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, 0))%{~ endif ~} AS 'Total Cost (USD)',\n  filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') AS 'FSO User Count',\n  %{~ if tf_min_full_users == 0 ~}filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') * ${tf_full_user_usd}%{~ else ~}${tf_min_full_users} * ${tf_full_user_committed_usd} + if(filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') > ${tf_min_full_users}, (filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, 0)%{~ endif ~} AS 'FSO User Cost (USD)',\n  filter(latest(billableConsumption), WHERE metric = 'CoreUsers') AS 'Core User Count',\n  %{~ if tf_min_core_users == 0 ~}filter(latest(billableConsumption), WHERE metric = 'CoreUsers') * ${tf_core_user_usd}%{~ else ~}${tf_min_core_users} * ${tf_core_user_committed_usd} + if(filter(latest(billableConsumption), WHERE metric = 'CoreUsers') > ${tf_min_core_users}, (filter(latest(billableConsumption), WHERE metric = 'CoreUsers') - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, 0)%{~ endif ~} AS 'Core User Cost (USD)',\n filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') AS 'Ingested GB',\n  %{~ if tf_min_gb_ingest == 0 ~}filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') * ${tf_gb_ingest_usd}%{~ else ~}${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + if(filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') > ${tf_min_gb_ingest}, (filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, 0)%{~ endif ~} AS 'Ingest Cost (USD)'\nSINCE 12 months ago facet monthOf(timestamp) order by timestamp"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    },
    %{ endif ~}
    %{ endfor ~}
    {
      "name": "Department Showback",
      "description": null,
      "widgets": [
        {
          "title": "Consumption Cost By Department (this month)",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 4,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "FROM Metric, NrConsumption SELECT %{~ if tf_min_core_users == 0 && tf_min_full_users == 0 && tf_min_gb_ingest == 0 ~}(max(`${tf_metric_name_prefix}.department.coreuser.count`) * ${tf_core_user_usd}) + (max(`${tf_metric_name_prefix}.department.fulluser.count`) * ${tf_full_user_usd}) + (sum(GigabytesIngested) * ${tf_gb_ingest_usd})%{~ else ~}(${tf_min_core_users} * ${tf_core_user_committed_usd} + if(max(`${tf_metric_name_prefix}.department.coreuser.count`) > ${tf_min_core_users}, (max(`${tf_metric_name_prefix}.department.coreuser.count`) - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, 0)) + (${tf_min_full_users} * ${tf_full_user_committed_usd} + if(max(`${tf_metric_name_prefix}.department.fulluser.count`) > ${tf_min_full_users}, (max(`${tf_metric_name_prefix}.department.fulluser.count`) - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, 0)) + (${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + if(sum(GigabytesIngested) > ${tf_min_gb_ingest}, (sum(GigabytesIngested) - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, 0))%{~ endif ~} AS 'Total Cost (USD)' SINCE this month FACET CASES(%{ for index_department, department in tf_showback_config ~}WHERE (department = '${department.department_name}') OR consumingAccountName IN (%{ for index_accounts_in, account in department.accounts_in }%{ if index_accounts_in != 0 ~}, %{ endif }'${account}'%{ endfor ~})%{ for regex in department.accounts_regex } OR consumingAccountName RLIKE r'${regex}'%{ endfor } AS '${department.department_name}', %{ endfor ~}WHERE consumingAccountName IS NOT NULL AS 'Unassigned') AS 'department'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Consumption Cost by Department (this month)",
          "layout": {
            "column": 5,
            "row": 1,
            "width": 8,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "FROM Metric, NrConsumption SELECT %{~ if tf_min_core_users == 0 && tf_min_full_users == 0 && tf_min_gb_ingest == 0 ~}max(`${tf_metric_name_prefix}.department.coreuser.count`) * ${tf_core_user_usd} + max(`${tf_metric_name_prefix}.department.fulluser.count`) * ${tf_full_user_usd} + sum(GigabytesIngested) * ${tf_gb_ingest_usd}%{~ else ~}(${tf_min_core_users} * ${tf_core_user_committed_usd} + if(max(`${tf_metric_name_prefix}.department.coreuser.count`) > ${tf_min_core_users}, (max(`${tf_metric_name_prefix}.department.coreuser.count`) - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, 0)) + (${tf_min_full_users} * ${tf_full_user_committed_usd} + if(max(`${tf_metric_name_prefix}.department.fulluser.count`) > ${tf_min_full_users}, (max(`${tf_metric_name_prefix}.department.fulluser.count`) - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, 0)) + (${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + if(sum(GigabytesIngested) > ${tf_min_gb_ingest}, (sum(GigabytesIngested) - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, 0))%{~ endif ~} AS 'Total Cost (USD)', max(`${tf_metric_name_prefix}.department.fulluser.count`) AS 'Full User Count', %{~ if tf_min_full_users == 0 ~}max(`${tf_metric_name_prefix}.department.fulluser.count`) * ${tf_full_user_usd}%{~ else ~}${tf_min_full_users} * ${tf_full_user_committed_usd} + if(max(`${tf_metric_name_prefix}.department.fulluser.count`) > ${tf_min_full_users}, (max(`${tf_metric_name_prefix}.department.fulluser.count`) - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, 0)%{~ endif ~} AS 'Full User Cost (USD)', max(`${tf_metric_name_prefix}.department.coreuser.count`) AS 'Core User Count', %{~ if tf_min_core_users == 0 ~}max(`${tf_metric_name_prefix}.department.coreuser.count`) * ${tf_core_user_usd}%{~ else ~}${tf_min_core_users} * ${tf_core_user_committed_usd} + if(max(`${tf_metric_name_prefix}.department.coreuser.count`) > ${tf_min_core_users}, (max(`${tf_metric_name_prefix}.department.coreuser.count`) - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, 0)%{~ endif ~} AS 'Core User Cost (USD)', sum(GigabytesIngested) AS ingestGigabytes, %{~ if tf_min_gb_ingest == 0 ~}sum(GigabytesIngested) * ${tf_gb_ingest_usd}%{~ else ~}${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + if(sum(GigabytesIngested) > ${tf_min_gb_ingest}, (sum(GigabytesIngested) - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, 0)%{~ endif ~} AS 'Ingest Cost (USD)' SINCE this month FACET CASES(%{ for index_department, department in tf_showback_config ~}WHERE (department = '${department.department_name}') OR consumingAccountName IN (%{ for index_accounts_in, account in department.accounts_in }%{ if index_accounts_in != 0 ~}, %{ endif }'${account}'%{ endfor ~})%{ for regex in department.accounts_regex } OR consumingAccountName RLIKE r'${regex}'%{ endfor } AS '${department.department_name}', %{ endfor ~}WHERE consumingAccountName IS NOT NULL AS 'Unassigned') AS 'department'"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Full Users by Department",
          "layout": {
            "column": 1,
            "row": 5,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": true
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId":  ${tf_account_id},
                "query": "SELECT latest(`${tf_metric_name_prefix}.department.fulluser.count`) AS 'Full User Count' FROM Metric SINCE 1 DAY AGO facet department LIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Core Users by Department",
          "layout": {
            "column": 4,
            "row": 5,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": true
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "SELECT latest(`${tf_metric_name_prefix}.department.coreuser.count`) AS 'Core User Count' FROM Metric SINCE 1 DAY AGO facet department LIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Basic Users by Department",
          "layout": {
            "column": 7,
            "row": 5,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": true
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "SELECT latest(`${tf_metric_name_prefix}.department.basicuser.count`) AS 'Basic User Count' FROM Metric SINCE 1 DAY AGO facet department LIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Total Users by Department",
          "layout": {
            "column": 10,
            "row": 5,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": true
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "SELECT latest(`${tf_metric_name_prefix}.department.totaluser.count`) AS 'Total User Count' FROM Metric SINCE 1 DAY AGO facet department LIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Total Consumption by Month",
          "layout": {
            "column": 1,
            "row": 8,
            "width": 12,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "Ingest Cost",
                "precision": 2,
                "type": "decimal"
              },
              {
                "name": "Total Cost",
                "precision": 2,
                "type": "decimal"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "FROM NrMTDConsumption\nSELECT\n  %{~ if tf_min_core_users == 0 && tf_min_full_users == 0 && tf_min_gb_ingest == 0 ~}filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') * ${tf_full_user_usd} + filter(latest(billableConsumption), WHERE metric = 'CoreUsers') * ${tf_core_user_usd} + filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') * ${tf_gb_ingest_usd}%{~ else ~}(${tf_min_full_users} * ${tf_full_user_committed_usd} + if(filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') > ${tf_min_full_users}, (filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, 0)) + (${tf_min_core_users} * ${tf_core_user_committed_usd} + if(filter(latest(billableConsumption), WHERE metric = 'CoreUsers') > ${tf_min_core_users}, (filter(latest(billableConsumption), WHERE metric = 'CoreUsers') - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, 0)) + (${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + if(filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') > ${tf_min_gb_ingest}, (filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, 0))%{~ endif ~} AS 'Total Cost (USD)',\n  filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') AS 'FSO User Count',\n  %{~ if tf_min_full_users == 0 ~}filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') * ${tf_full_user_usd}%{~ else ~}${tf_min_full_users} * ${tf_full_user_committed_usd} + if(filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') > ${tf_min_full_users}, (filter(latest(billableConsumption), WHERE metric = 'FullUsers' OR metric = 'FullPlatformUsers') - ${tf_min_full_users}) * ${tf_full_user_additional_usd}, 0)%{~ endif ~} AS 'FSO User Cost (USD)',\n  filter(latest(billableConsumption), WHERE metric = 'CoreUsers') AS 'Core User Count',\n  %{~ if tf_min_core_users == 0 ~}filter(latest(billableConsumption), WHERE metric = 'CoreUsers') * ${tf_core_user_usd}%{~ else ~}${tf_min_core_users} * ${tf_core_user_committed_usd} + if(filter(latest(billableConsumption), WHERE metric = 'CoreUsers') > ${tf_min_core_users}, (filter(latest(billableConsumption), WHERE metric = 'CoreUsers') - ${tf_min_core_users}) * ${tf_core_user_additional_usd}, 0)%{~ endif ~} AS 'Core User Cost (USD)',\n filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') AS 'Ingested GB',\n  %{~ if tf_min_gb_ingest == 0 ~}filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') * ${tf_gb_ingest_usd}%{~ else ~}${tf_min_gb_ingest} * ${tf_gb_ingest_committed_usd} + if(filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') > ${tf_min_gb_ingest}, (filter(latest(GigabytesIngestedBillable), WHERE productLine = 'DataPlatform') - ${tf_min_gb_ingest}) * ${tf_gb_ingest_additional_usd}, 0)%{~ endif ~} AS 'Ingest Cost (USD)'\nSINCE 12 months ago facet monthOf(timestamp) order by timestamp"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    },
    {
      "name": "Account Users (Summary)",
      "description": null,
      "widgets": [
        {
          "title": "Basic, Core and Full user counts by account",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "FROM Metric SELECT latest(`${tf_metric_name_prefix}.account.basicuser.count`) AS 'Basic', latest(`${tf_metric_name_prefix}.account.coreuser.count`) AS 'Core', latest(`${tf_metric_name_prefix}.account.fulluser.count`) AS 'Full', latest(`${tf_metric_name_prefix}.account.basicuser.count`)+latest(`${tf_metric_name_prefix}.account.coreuser.count`)+latest(`${tf_metric_name_prefix}.account.fulluser.count`) AS 'Total' since 24 hours ago facet account LIMIT MAX "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "% by user type",
          "layout": {
            "column": 7,
            "row": 4,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": true
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "SELECT (latest(`${tf_metric_name_prefix}.organization.basicuser.count`) OR 0 ) + (latest(`${tf_metric_name_prefix}.organization.coreuser.count`) OR 0) + (latest(`${tf_metric_name_prefix}.organization.fulluser.count`) OR 0) AS 'Users'\nFROM Metric SINCE 1 day AGO\nFACET cases(\n  WHERE metricName = '${tf_metric_name_prefix}.organization.basicuser.count' AS 'Basic',\n  WHERE metricName = '${tf_metric_name_prefix}.organization.coreuser.count' AS 'Core',\n  WHERE metricName = '${tf_metric_name_prefix}.organization.fulluser.count' AS 'Full'\n)"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Account users by type",
          "layout": {
            "column": 10,
            "row": 4,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "SELECT (latest(`${tf_metric_name_prefix}.organization.basicuser.count`) OR 0 ) + (latest(`${tf_metric_name_prefix}.organization.coreuser.count`) OR 0) + (latest(`${tf_metric_name_prefix}.organization.fulluser.count`) OR 0) AS 'Users'\nFROM Metric SINCE 1 month AGO TIMESERIES AUTO\nFACET cases(\n  WHERE metricName = '${tf_metric_name_prefix}.organization.basicuser.count' AS 'Basic',\n  WHERE metricName = '${tf_metric_name_prefix}.organization.coreuser.count' AS 'Core',\n  WHERE metricName = '${tf_metric_name_prefix}.organization.fulluser.count' AS 'Full'\n)"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Unique Users",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 8
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "format": "%b %d, %Y, %X",
                "name": "last_access_at",
                "type": "custom"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "SELECT timestamp, email, full_name, last_access_at, user_tier_name, departmentSet FROM ${tf_event_name_prefix}_UniqueUsers LIMIT MAX SINCE 1 day ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    },
    {
      "name": "Account Users (All Accounts)",
      "description": null,
      "widgets": [
        {
          "title": "Account details",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "FROM Metric SELECT uniqueCount(account) AS Accounts SINCE 1 day ago WHERE metricName = '${tf_metric_name_prefix}.account.totaluser.count' LIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Basic, Core and Full user counts by account",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 9,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "FROM Metric SELECT latest(`${tf_metric_name_prefix}.account.basicuser.count`) AS 'Basic', latest(`${tf_metric_name_prefix}.account.coreuser.count`) AS 'Core', latest(`${tf_metric_name_prefix}.account.fulluser.count`) AS 'Full', latest(`${tf_metric_name_prefix}.account.basicuser.count`)+latest(`${tf_metric_name_prefix}.account.coreuser.count`)+latest(`${tf_metric_name_prefix}.account.fulluser.count`) AS 'Total' since 24 hours ago facet account LIMIT MAX "
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "User list - by account",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 12,
            "height": 5
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "format": "%b %d, %Y, %X",
                "name": "last_access_at",
                "type": "custom"
              }
            ],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": ${tf_account_id},
                "query": "SELECT  timestamp, account_id, account_name, email, full_name, last_access_at, user_tier_name, user_role \n FROM ${tf_event_name_prefix}_AccountUsers LIMIT MAX order by last_access_at desc since 1 day ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    }
  ]
}